# Use Node.js 20 as base image
FROM node:20-alpine

# Install dependencies for browser testing and @polkadot/util-crypto
RUN apk update && \
    apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    python3 \
    make \
    g++ \
    wget \
    git \
    cmake \
    openssl-dev && \
    # Configure git
    git config --global --add safe.directory /app && \
    git config --global user.email "docker@example.com" && \
    git config --global user.name "Docker Build"

# Set environment variables for Chrome
ENV CHROME_BIN=/usr/bin/chromium-browser
ENV CHROME_PATH=/usr/lib/chromium/
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Create app directory
WORKDIR /app

# Create .npmrc with specific configuration
RUN echo "registry=https://registry.npmjs.org/" > .npmrc && \
    echo "fetch-retries=5" >> .npmrc && \
    echo "fetch-retry-mintimeout=20000" >> .npmrc && \
    echo "fetch-retry-maxtimeout=120000" >> .npmrc && \
    echo "network-timeout=300000" >> .npmrc && \
    echo "strict-ssl=true" >> .npmrc && \
    echo "audit=false" >> .npmrc && \
    echo "fund=false" >> .npmrc && \
    echo "loglevel=verbose" >> .npmrc

# Copy package files
COPY package*.json ./

# Install specific npm version known to handle integrity well
RUN npm install -g npm@10.2.4

# Install dependencies with specific memory limits
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Clean install with git available (skip optional native dependencies)
RUN npm ci --no-audit --legacy-peer-deps --no-optional --verbose

# Copy source code
COPY . .

# Create test results directory
RUN mkdir -p /app/test-results

# Default command (can be overridden)
CMD ["npm", "test"]
# Build stage
FROM node:20-slim AS builder

# Install dependencies for @polkadot/util-crypto and git
RUN apt-get update && \
    apt-get install -y python3 make g++ wget ca-certificates git && \
    rm -rf /var/lib/apt/lists/*

# Configure git
RUN git config --global --add safe.directory /app && \
    git config --global user.email "docker@example.com" && \
    git config --global user.name "Docker Build"

# Create app directory
WORKDIR /app

# Create .npmrc with specific configuration
RUN echo "registry=https://registry.npmjs.org/" > .npmrc && \
    echo "fetch-retries=5" >> .npmrc && \
    echo "fetch-retry-mintimeout=20000" >> .npmrc && \
    echo "fetch-retry-maxtimeout=120000" >> .npmrc && \
    echo "network-timeout=300000" >> .npmrc && \
    echo "strict-ssl=true" >> .npmrc && \
    echo "audit=false" >> .npmrc && \
    echo "fund=false" >> .npmrc && \
    echo "loglevel=verbose" >> .npmrc

# Copy package files
COPY package*.json ./

# Install specific npm version known to handle integrity well
RUN npm install -g npm@10.2.4

# Install dependencies with specific memory limits
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Clean install with git available (skip optional native dependencies)
RUN npm ci --no-audit --legacy-peer-deps --no-optional --verbose

# Production stage
FROM node:20-slim

# Install runtime dependencies only
RUN apt-get update && \
    apt-get install -y wget curl && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built node_modules from builder
COPY --from=builder /app/node_modules ./node_modules

# Copy source code
COPY . .

# Expose server port
EXPOSE 3000

# Add healthcheck endpoint
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

# Start server in dev mode (no build needed, uses ts-node)
CMD ["npm", "run", "start:dev"]